package_update: true

users:
  - default
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    shell: /bin/zsh
    ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAAAAAB3NzaC1yc2EAAAADAQABAAABgQDi7JX3SL4EcZB2CuweOKgo8z6VbBlJiKJZSzZFOAmZu+rcXKhkESL+SQrd1bF2aZgYTCIhPY5vOZe+gBnZLSHwUqLB+ufzUA5W5+iO+qzsj0oRb4FQb4+SLJfsTMUK3xp2H08PHVYK3Eg30iyNtaOODHpZGGhCTPR0JySKvtZUWpAP1/oN/9C64Fi5G7SNluU5HOfsPwlu/ZKWjHNqnw3zARQykHcFp5aqIIz+skPydBNq06eLeZa0eFyNdPTyrAh6yU+74YWAafFqb5pfgOngigSZ2OXIsoOrtxloqEdnoxEcF3MC4PNXQ9VRbXL5NF2tD9K8CBWlkEgFPf6Za0/L0qUJAvCckusDVFtQ25vTo7JdxETDhtUVxDysBJ6ENahL8NKvNsGkf2cBkuivRW7CVd3k3DRJf3oc/zaKgZuKgPMUUD33faB7mRtW6X8hh+Ha0Y2qCjMP10Ulz/9eWZ4mz4LwXvb8j1hCPXKD8AlqJcYTdRmUe3z7m+lZde1bQ68=

packages:
  - locate
  - pipx
# Moved to pacman
# - python3-pip
# - jq
# - sysstat
# - zsh
# - fzf
# - gnome-keyring
# - kitty-terminfo
# - sshfs
# - bat

snap:
  commands:
  - snap install juju --channel=3.4/stable
  - snap install microk8s --channel 1.28-strict/stable
  - snap alias microk8s.kubectl kubectl
  - snap refresh

runcmd:
- pipx install tox
- DEBIAN_FRONTEND=noninteractive apt-get remove -y landscape-client landscape-common adwaita-icon-theme humanity-icon-theme
- DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
- DEBIAN_FRONTEND=noninteractive apt-get -y autoremove

- |
  # disable swap
  sysctl -w vm.swappiness=0
  echo "vm.swappiness = 0" | tee -a /etc/sysctl.conf
  swapoff -a

- |
  # disable unnecessary services
  systemctl disable man-db.timer man-db.service --now
  systemctl disable apport.service apport-autoreport.service  --now
  systemctl disable apt-daily.service apt-daily.timer --now
  systemctl disable apt-daily-upgrade.service apt-daily-upgrade.timer --now
  systemctl disable unattended-upgrades.service --now
  systemctl disable motd-news.service motd-news.timer --now
  systemctl disable bluetooth.target --now
  systemctl disable ua-messaging.service ua-messaging.timer --now
  systemctl disable ua-timer.timer ua-timer.service --now
  systemctl disable systemd-tmpfiles-clean.timer --now

  # Disable IPv6
  echo "net.ipv6.conf.all.disable_ipv6=1" | tee -a /etc/sysctl.conf
  echo "net.ipv6.conf.default.disable_ipv6=1" | tee -a /etc/sysctl.conf
  echo "net.ipv6.conf.lo.disable_ipv6=1" | tee -a /etc/sysctl.conf
  sysctl -p

- |
  # oh-my-zsh + juju plugin + scenario
  sudo -u ubuntu sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  sudo -u ubuntu git clone https://github.com/zsh-users/zsh-autosuggestions.git ~ubuntu/.oh-my-zsh/custom/plugins/zsh-autosuggestions
  sudo -u ubuntu git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~ubuntu/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
  sudo -u ubuntu sed -i 's/plugins=(git)/plugins=(fzf git zsh-autosuggestions zsh-syntax-highlighting virtualenv colored-man-pages juju colorize)/g' ~ubuntu/.zshrc
  sudo -u ubuntu echo 'export PATH=$PATH:$HOME/.local/bin' >> ~ubuntu/.zshrc
  sudo -u ubuntu pip install ops-scenario tox
  sudo -u ubuntu wget -P ~ubuntu/.oh-my-zsh/themes/ https://raw.githubusercontent.com/Abuelodelanada/charm-dev-utils/main/zsh_themes/juju.zsh-theme
  sudo -u ubuntu sed -i 's/ZSH_THEME="robbyrussell"/ZSH_THEME="juju"/g' ~ubuntu/.zshrc

- |
  # change default shell
  sudo chsh -s /bin/zsh ubuntu

- |
  # setup charmcraft
  lxd init --auto
  adduser ubuntu lxd

- |
  # Make sure juju directory is there
  sudo -u ubuntu mkdir -p /home/ubuntu/.local/share/juju

- |
  # setup microk8s and bootstrap
  sudo usermod -a -G snap_microk8s ubuntu
  sudo -u ubuntu mkdir -p /home/ubuntu/.kube
  # adduser ubuntu microk8s
  microk8s status --wait-ready

  microk8s.enable metrics-server
  microk8s.kubectl rollout status deployments/metrics-server -n kube-system -w --timeout=600s

  # The dns addon will restart the api server so you may see a blip in the availability
  # Separating addons to avoid errors such as
  # dial tcp 127.0.0.1:16443: connect: connection refused
  microk8s.enable hostpath-storage
  microk8s.kubectl rollout status deployments/hostpath-provisioner -n kube-system -w --timeout=600s
  microk8s.enable metallb:10.0.0.2-10.0.0.20
  microk8s.enable rbac
  microk8s.enable dns
  microk8s.kubectl rollout status deployments/coredns -n kube-system -w --timeout=600s

  microk8s.enable ingress
  # wait for storage, ingress to become available
  microk8s.kubectl rollout status daemonsets/nginx-ingress-microk8s-controller -n ingress -w --timeout=600s

  sudo -u ubuntu juju bootstrap microk8s microk8s

  # dump config (this is needed for utils such as k9s or kdash)
  microk8s config | sudo -u ubuntu tee /home/ubuntu/.kube/config > /dev/null

  # # bootstrap lxd
  sudo -u ubuntu juju bootstrap localhost lxd

  # We need to connect the dot-local-share-juju interface with jhack
  sudo snap connect jhack:dot-local-share-juju snapd

- |
  # telco
  # microk8s.addons repo add community https://github.com/canonical/microk8s-community-addons --reference feat/strict-fix-multus
  # microk8s.enable multus

- |
  sudo updatedb
  sudo -u ubuntu mkdir -p /home/ubuntu/.local/bin && ln -s /bin/batcat /home/ubuntu/.local/bin/bat

- |
  # k9s
  curl -sS https://webinstall.dev/k9s | sudo -u ubuntu HOME=/home/ubuntu bash

final_message: "The system is finally up, after $UPTIME seconds"
